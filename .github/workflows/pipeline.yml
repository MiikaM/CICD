name: Deployment pipeline

on:
  push:
    branches:
      - master
      - keeping_green
  pull_request:    
    branches: [master]
    types: [opened, synchronize]

jobs:
  # simple_tests:
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '16'
  #     - name: npm install
  #       run: npm install
  #     - name: lint
  #       run: npm run eslint
  #     - name: build
  #       run: npm run build
  #     - name: test
  #       run: npm run test
  #     - name: e2e tests
  #       uses: cypress-io/github-action@v5
  #       with:
  #         start: npm run start-prod
  # deploy:
  #   name: Deploy app
  #   if: ${{ github.event_name == 'push' }}
  #   needs: simple_tests
  #   runs-on: ubuntu-latest
  #   env:
  #     FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '16'
  #     - name: npm install
  #       run: npm install
  #     - name: build
  #       run: npm run build
  #     - name: deploy
  #       run: flyctl deploy --remote-only
  tag-release:
    name: Tag release
    if: ${{ github.event_name == 'push' }}
    # needs: [simple_tests]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: '0'
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.36.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          WITH_V: true
          # DRY_RUN: true
  a_test_job:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: github context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: commits
        env:
          COMMITS: ${{ toJson(github.event.commits) }}
        run: echo "$COMMITS"
      - name: commit messages
        env:
          COMMIT_MESSAGES: ${{ toJson(github.event.commits.*.message) }}
        run: echo "$COMMIT_MESSAGES"